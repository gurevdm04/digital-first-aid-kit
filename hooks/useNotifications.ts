import * as Notifications from "expo-notifications";
import { useEffect } from "react";
import { Platform, Alert } from "react-native";

/**
 * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
 * –†–∞–±–æ—Ç–∞–µ—Ç –¥–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–∫—Ä—ã—Ç–æ
 */
export function useSetupNotifications() {
  useEffect(() => {
    (async () => {
      const { status } = await Notifications.requestPermissionsAsync();
      if (status !== "granted") {
        Alert.alert(
          "–†–∞–∑—Ä–µ—à–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
          "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø—Ä–∏—ë–º–µ –ª–µ–∫–∞—Ä—Å—Ç–≤, –Ω—É–∂–Ω–æ —Ä–∞–∑—Ä–µ—à–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è."
        );
      }

      // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–≤–µ–¥–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
      Notifications.setNotificationHandler({
        handleNotification: async () => ({
          shouldShowAlert: true,
          shouldPlaySound: true,
          shouldSetBadge: false,
          shouldShowBanner: true,
          shouldShowList: true,
        }),
      });
    })();
  }, []);
}

/**
 * –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (—Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–µ)
 */
export async function scheduleMedicineNotification(
  title: string,
  startDate: string,
  repeatInterval?: "none" | "day" | "hour"
) {
  try {
    const triggerDate = new Date(startDate);
    if (triggerDate < new Date()) return;

    let trigger: Notifications.NotificationTriggerInput;

    if (repeatInterval === "day") {
      trigger = {
        type: "daily",
        hour: triggerDate.getHours(),
        minute: triggerDate.getMinutes(),
      };
    } else if (repeatInterval === "hour") {
      trigger = {
        type: "timeInterval",
        seconds: 60 * 60,
        repeats: true,
      };
    } else {
      trigger = {
        type: "date",
        date: triggerDate,
        repeats: false,
      };
    }

    await Notifications.scheduleNotificationAsync({
      content: {
        title: "üíä –í—Ä–µ–º—è –ø—Ä–∏–Ω—è—Ç—å –ª–µ–∫–∞—Ä—Å—Ç–≤–æ",
        body: `–ü–æ—Ä–∞ –ø—Ä–∏–Ω—è—Ç—å: ${title}`,
        sound: true,
        priority: Notifications.AndroidNotificationPriority.HIGH,
      },
      trigger,
    });
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:", error);
  }
}